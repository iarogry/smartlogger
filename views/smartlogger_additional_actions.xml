<?xml version="1.0" encoding="utf-8"?>
<!-- ФАЙЛ: views/smartlogger_additional_actions.xml -->
<!-- СОЗДАТЬ НОВЫЙ ФАЙЛ! (этого файла нет в проекте) -->

<odoo>
    <!-- Дополнительные действия для расширенного функционала SmartLogger -->

    <!-- Kanban представление станций -->
    <record id="action_smartlogger_station_kanban" model="ir.actions.act_window">
        <field name="name">Станції SmartLogger (Kanban)</field>
        <field name="res_model">smartlogger.station</field>
        <field name="view_mode">kanban,tree,form</field>
        <field name="view_id" ref="smartlogger_station_view_kanban"/>
        <field name="context">{
            'search_default_group_by_status': 1
        }</field>
    </record>

    <!-- Станции с ошибками -->
    <record id="action_smartlogger_error_stations" model="ir.actions.act_window">
        <field name="name">Станції з помилками</field>
        <field name="res_model">smartlogger.station</field>
        <field name="view_mode">tree,form</field>
        <field name="domain">[('status', 'in', ['error', 'sync_error'])]</field>
        <field name="context">{
            'search_default_error_stations': 1
        }</field>
        <field name="help" type="html">
            <p class="o_view_nocontent_smiling_face">
                Станції з помилками відсутні!
            </p>
            <p>
                Це означає, що всі ваші станції працюють без помилок синхронізації.
            </p>
        </field>
    </record>

    <!-- Вибіркова синхронізація -->
    <record id="action_manual_sync_wizard" model="ir.actions.act_window">
        <field name="name">Вибіркова синхронізація</field>
        <field name="res_model">smartlogger.sync.data.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
        <field name="context">{'default_sync_mode': 'data_only'}</field>
    </record>

    <!-- Cron jobs управление -->
    <record id="action_smartlogger_cron_jobs" model="ir.actions.act_window">
        <field name="name">Автоматичні завдання SmartLogger</field>
        <field name="res_model">ir.cron</field>
        <field name="view_mode">tree,form</field>
        <field name="domain">[('name', 'ilike', 'SmartLogger')]</field>
        <field name="context">{'create': False, 'delete': False}</field>
        <field name="help" type="html">
            <p class="o_view_nocontent_smiling_face">
                Управління автоматичними завданнями SmartLogger
            </p>
            <p>
                Тут ви можете:
            </p>
            <ul>
                <li>Увімкнути/вимкнути автоматичну синхронізацію</li>
                <li>Змінити інтервали виконання</li>
                <li>Переглянути статус виконання завдань</li>
                <li>Налаштувати додаткові завдання обслуговування</li>
            </ul>
        </field>
    </record>

    <!-- Расширенные настройки -->
    <record id="action_smartlogger_advanced_config" model="ir.actions.act_window">
        <field name="name">Розширені налаштування</field>
        <field name="res_model">ir.config_parameter</field>
        <field name="view_mode">tree,form</field>
        <field name="domain">[('key', 'ilike', 'huawei.fusionsolar%')]</field>
        <field name="context">{'create': True, 'delete': True}</field>
        <field name="help" type="html">
            <p class="o_view_nocontent_smiling_face">
                Розширені налаштування SmartLogger
            </p>
            <p>
                <strong>Увага!</strong> Змінюйте ці параметри тільки якщо розумієте їх призначення.
            </p>
            <p>
                Тут можна додати нові параметри конфігурації або змінити існуючі.
            </p>
        </field>
    </record>

<?xml version="1.0" encoding="utf-8"?>
<!-- ФАЙЛ: views/smartlogger_additional_actions.xml -->
<!-- СОЗДАТЬ НОВЫЙ ФАЙЛ! (этого файла нет в проекте) -->

<odoo>
    <!-- Дополнительные действия для расширенного функционала SmartLogger -->

    <!-- Kanban представление станций -->
    <record id="action_smartlogger_station_kanban" model="ir.actions.act_window">
        <field name="name">Станції SmartLogger (Kanban)</field>
        <field name="res_model">smartlogger.station</field>
        <field name="view_mode">kanban,tree,form</field>
        <field name="view_id" ref="smartlogger_station_view_kanban"/>
        <field name="context">{
            'search_default_group_by_status': 1
        }</field>
    </record>

    <!-- Станции с ошибками -->
    <record id="action_smartlogger_error_stations" model="ir.actions.act_window">
        <field name="name">Станції з помилками</field>
        <field name="res_model">smartlogger.station</field>
        <field name="view_mode">tree,form</field>
        <field name="domain">[('status', 'in', ['error', 'sync_error'])]</field>
        <field name="context">{
            'search_default_error_stations': 1
        }</field>
        <field name="help" type="html">
            <p class="o_view_nocontent_smiling_face">
                Станції з помилками відсутні!
            </p>
            <p>
                Це означає, що всі ваші станції працюють без помилок синхронізації.
            </p>
        </field>
    </record>

    <!-- Вибіркова синхронізація -->
    <record id="action_manual_sync_wizard" model="ir.actions.act_window">
        <field name="name">Вибіркова синхронізація</field>
        <field name="res_model">smartlogger.sync.data.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
        <field name="context">{'default_sync_mode': 'data_only'}</field>
    </record>

    <!-- Cron jobs управление -->
    <record id="action_smartlogger_cron_jobs" model="ir.actions.act_window">
        <field name="name">Автоматичні завдання SmartLogger</field>
        <field name="res_model">ir.cron</field>
        <field name="view_mode">tree,form</field>
        <field name="domain">[('name', 'ilike', 'SmartLogger')]</field>
        <field name="context">{'create': False, 'delete': False}</field>
        <field name="help" type="html">
            <p class="o_view_nocontent_smiling_face">
                Управління автоматичними завданнями SmartLogger
            </p>
            <p>
                Тут ви можете:
            </p>
            <ul>
                <li>Увімкнути/вимкнути автоматичну синхронізацію</li>
                <li>Змінити інтервали виконання</li>
                <li>Переглянути статус виконання завдань</li>
                <li>Налаштувати додаткові завдання обслуговування</li>
            </ul>
        </field>
    </record>

    <!-- Расширенные настройки -->
    <record id="action_smartlogger_advanced_config" model="ir.actions.act_window">
        <field name="name">Розширені налаштування</field>
        <field name="res_model">ir.config_parameter</field>
        <field name="view_mode">tree,form</field>
        <field name="domain">[('key', 'ilike', 'huawei.fusionsolar%')]</field>
        <field name="context">{'create': True, 'delete': True}</field>
        <field name="help" type="html">
            <p class="o_view_nocontent_smiling_face">
                Розширені налаштування SmartLogger
            </p>
            <p>
                <strong>Увага!</strong> Змінюйте ці параметри тільки якщо розумієте їх призначення.
            </p>
            <p>
                Тут можна додати нові параметри конфігурації або змінити існуючі.
            </p>
        </field>
    </record>

    <!-- Действие для очистки старых данных через wizard синхронизации -->
    <record id="action_smartlogger_cleanup_data" model="ir.actions.act_window">
        <field name="name">Очищення старих даних</field>
        <field name="res_model">smartlogger.sync.data.wizard</field>
        <field name="view_mode">form</field>
        <field name="target">new</field>
        <field name="context">{'default_sync_mode': 'data_only', 'cleanup_mode': True}</field>
    </record>

    <!-- Документация API -->
    <record id="action_smartlogger_api_docs" model="ir.actions.act_url">
        <field name="name">Документація Huawei FusionSolar API</field>
        <field name="url">https://forum.huawei.com/enterprise/en/communicate-with-fusionsolar-through-an-openapi-account/thread/591478-100027</field>
        <field name="target">new</field>
    </record>

    <!-- Серверные действия для быстрых операций -->

    <!-- Быстрая синхронизация всех станций -->
    <record id="server_action_quick_sync_all" model="ir.actions.server">
        <field name="name">Швидка синхронізація всіх станцій</field>
        <field name="model_id" ref="model_smartlogger_station"/>
        <field name="binding_model_id" ref="model_smartlogger_station"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
# Запуск быстрой синхронизации
try:
    result = env['smartlogger.station'].sync_fusionsolar_data()
    if result.get('success'):
        raise UserWarning('Синхронізація завершена успішно!')
    else:
        raise UserError('Помилка синхронізації: %s' % result.get('message', 'Невідома помилка'))
except Exception as e:
    raise UserError('Помилка: %s' % str(e))
        </field>
    </record>

    <!-- Пометить станции как на обслуживании -->
    <record id="server_action_mark_maintenance" model="ir.actions.server">
        <field name="name">Позначити як "На обслуговуванні"</field>
        <field name="model_id" ref="model_smartlogger_station"/>
        <field name="binding_model_id" ref="model_smartlogger_station"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
# Помечаем выбранные станции как на обслуживании
for station in records:
    station.status = 'maintenance'
raise UserWarning('Вибрані станції позначено як "На обслуговуванні"')
        </field>
    </record>

    <!-- Сброс ошибок станций -->
    <record id="server_action_reset_errors" model="ir.actions.server">
        <field name="name">Скинути помилки</field>
        <field name="model_id" ref="model_smartlogger_station"/>
        <field name="binding_model_id" ref="model_smartlogger_station"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
# Сбрасываем ошибки и статус станций
for station in records:
    if station.status in ['error', 'sync_error']:
        station.write({
            'status': 'active',
            'last_error': False
        })
raise UserWarning('Помилки вибраних станцій скинуто')
        </field>
    </record>

    <!-- Экспорт данных станций в CSV -->
    <record id="server_action_export_csv" model="ir.actions.server">
        <field name="name">Експортувати дані в CSV</field>
        <field name="model_id" ref="model_smartlogger_station"/>
        <field name="binding_model_id" ref="model_smartlogger_station"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
# Экспорт данных станций
import base64
import csv
import io
from datetime import datetime

output = io.StringIO()
writer = csv.writer(output)

# Заголовки
writer.writerow([
    'Назва станції', 'Код станції', 'Регіон', 'Статус',
    'Потужність (кВт)', 'Поточна потужність (кВт)',
    'Добова енергія (кВт·год)', 'Місячна енергія (кВт·год)',
    'Річна енергія (кВт·год)', 'Загальна енергія (кВт·год)',
    'Остання синхронізація'
])

# Данные
for station in records:
    writer.writerow([
        station.name, station.station_code, station.region or '',
        station.status, station.capacity, station.current_power,
        station.daily_energy, station.monthly_energy,
        station.yearly_energy, station.lifetime_energy,
        station.last_sync.strftime('%Y-%m-%d %H:%M:%S') if station.last_sync else ''
    ])

# Создаем attachment
csv_data = output.getvalue()
attachment = env['ir.attachment'].create({
    'name': f'smartlogger_stations_{datetime.now().strftime("%Y%m%d_%H%M%S")}.csv',
    'type': 'binary',
    'datas': base64.b64encode(csv_data.encode()),
    'res_model': 'smartlogger.station',
    'mimetype': 'text/csv'
})

# Возвращаем ссылку на скачивание
action = {
    'type': 'ir.actions.act_url',
    'url': f'/web/content/{attachment.id}?download=true',
    'target': 'self',
}
        </field>
    </record>
</odoo>

    <!-- Серверные действия для быстрых операций -->

    <!-- Быстрая синхронизация всех станций -->
    <record id="server_action_quick_sync_all" model="ir.actions.server">
        <field name="name">Швидка синхронізація всіх станцій</field>
        <field name="model_id" ref="model_smartlogger_station"/>
        <field name="binding_model_id" ref="model_smartlogger_station"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
# Запуск быстрой синхронизации
try:
    result = env['smartlogger.station'].sync_fusionsolar_data()
    if result.get('success'):
        raise UserWarning('Синхронізація завершена успішно!')
    else:
        raise UserError('Помилка синхронізації: %s' % result.get('message', 'Невідома помилка'))
except Exception as e:
    raise UserError('Помилка: %s' % str(e))
        </field>
    </record>

    <!-- Пометить станции как на обслуживании -->
    <record id="server_action_mark_maintenance" model="ir.actions.server">
        <field name="name">Позначити як "На обслуговуванні"</field>
        <field name="model_id" ref="model_smartlogger_station"/>
        <field name="binding_model_id" ref="model_smartlogger_station"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
# Помечаем выбранные станции как на обслуживании
for station in records:
    station.status = 'maintenance'
raise UserWarning('Вибрані станції позначено як "На обслуговуванні"')
        </field>
    </record>

    <!-- Сброс ошибок станций -->
    <record id="server_action_reset_errors" model="ir.actions.server">
        <field name="name">Скинути помилки</field>
        <field name="model_id" ref="model_smartlogger_station"/>
        <field name="binding_model_id" ref="model_smartlogger_station"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
# Сбрасываем ошибки и статус станций
for station in records:
    if station.status in ['error', 'sync_error']:
        station.write({
            'status': 'active',
            'last_error': False
        })
raise UserWarning('Помилки вибраних станцій скинуто')
        </field>
    </record>

    <!-- Экспорт данных станций в CSV -->
    <record id="server_action_export_csv" model="ir.actions.server">
        <field name="name">Експортувати дані в CSV</field>
        <field name="model_id" ref="model_smartlogger_station"/>
        <field name="binding_model_id" ref="model_smartlogger_station"/>
        <field name="binding_view_types">list</field>
        <field name="state">code</field>
        <field name="code">
# Экспорт данных станций
import base64
import csv
import io
from datetime import datetime

output = io.StringIO()
writer = csv.writer(output)

# Заголовки
writer.writerow([
    'Назва станції', 'Код станції', 'Регіон', 'Статус',
    'Потужність (кВт)', 'Поточна потужність (кВт)',
    'Добова енергія (кВт·год)', 'Місячна енергія (кВт·год)',
    'Річна енергія (кВт·год)', 'Загальна енергія (кВт·год)',
    'Остання синхронізація'
])

# Данные
for station in records:
    writer.writerow([
        station.name, station.station_code, station.region or '',
        station.status, station.capacity, station.current_power,
        station.daily_energy, station.monthly_energy,
        station.yearly_energy, station.lifetime_energy,
        station.last_sync.strftime('%Y-%m-%d %H:%M:%S') if station.last_sync else ''
    ])

# Создаем attachment
csv_data = output.getvalue()
attachment = env['ir.attachment'].create({
    'name': f'smartlogger_stations_{datetime.now().strftime("%Y%m%d_%H%M%S")}.csv',
    'type': 'binary',
    'datas': base64.b64encode(csv_data.encode()),
    'res_model': 'smartlogger.station',
    'mimetype': 'text/csv'
})

# Возвращаем ссылку на скачивание
action = {
    'type': 'ir.actions.act_url',
    'url': f'/web/content/{attachment.id}?download=true',
    'target': 'self',
}
        </field>
    </record>
</odoo>