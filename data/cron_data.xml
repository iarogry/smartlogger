<?xml version="1.0" encoding="utf-8"?>
<odoo>
	<data noupdate="1">
		<record id="cron_sync_smartlogger_data" model="ir.cron">
			<field name="name">Синхронізація даних SmartLogger</field>
			<field name="model_id" ref="model_smartlogger_station"/>
			<field name="state">code</field>
			<field name="code">model.sync_fusionsolar_data()</field>
			<field name="interval_number">15</field>
			<field name="interval_type">minutes</field>
			<field name="numbercall">-1</field>
			<field name="doall">False</field>
			<field name="active">True</field>
		</record>

		<record id="cron_cleanup_old_kpi_data" model="ir.cron">
			<field name="name">Очищення старих KPI даних SmartLogger</field>
			<field name="model_id" ref="model_smartlogger_station"/>
			<field name="state">code</field>
			<field name="code">
# Отримуємо налаштування терміну зберігання
IrConfigParameter = env['ir.config_parameter'].sudo()
retention_days = int(IrConfigParameter.get_param('huawei.fusionsolar.data_retention_days', '90'))

# Виконуємо очищення
deleted_count = model.cleanup_old_kpi_data(retention_days)
log("Очищено %d старих записів KPI (старіше %d днів)" % (deleted_count, retention_days))
			</field>
			<field name="interval_number">1</field>
			<field name="interval_type">days</field>
			<field name="nextcall" eval="(DateTime.now() + timedelta(days=1)).replace(hour=2, minute=0, second=0)"/>
			<field name="numbercall">-1</field>
			<field name="doall">False</field>
			<field name="active">True</field>
		</record>

		<record id="cron_update_station_list" model="ir.cron">
			<field name="name">Оновлення списку станцій SmartLogger</field>
			<field name="model_id" ref="model_smartlogger_station"/>
			<field name="state">code</field>
			<field name="code">
# Перевіряємо статус API перед оновленням списку
try:
    model._check_api_blocked_status()
    # Виконуємо синхронізацію тільки списку станцій
    base_url, username, password, batch_size, request_delay = model._get_fusionsolar_api_credentials()
    model._update_station_list(base_url, username, password, request_delay)
    log("Список станцій оновлено успішно")
except Exception as e:
    log("Оновлення списку станцій пропущено: %s" % str(e), level='warning')
			</field>
			<field name="interval_number">1</field>
			<field name="interval_type">days</field>
			<field name="nextcall" eval="(DateTime.now() + timedelta(days=1)).replace(hour=1, minute=0, second=0)"/>
			<field name="numbercall">-1</field>
			<field name="doall">False</field>
			<field name="active">True</field>
		</record>

		<record id="cron_weekly_full_sync" model="ir.cron">
			<field name="name">Щотижнева повна синхронізація SmartLogger</field>
			<field name="model_id" ref="model_smartlogger_station"/>
			<field name="state">code</field>
			<field name="code">
# Виконуємо повну синхронізацію один раз на тиждень
try:
    result = model.sync_fusionsolar_data()
    if result.get('success'):
        log("Щотижнева повна синхронізація завершена успішно")
    else:
        log("Щотижнева повна синхронізація завершена з помилками", level='warning')
except Exception as e:
    log("Помилка щотижневої синхронізації: %s" % str(e), level='error')
			</field>
			<field name="interval_number">1</field>
			<field name="interval_type">weeks</field>
			<field name="nextcall" eval="(DateTime.now() + timedelta(days=(6-DateTime.now().weekday()))).replace(hour=0, minute=30, second=0)"/>
			<field name="numbercall">-1</field>
			<field name="doall">False</field>
			<field name="active">False</field>
			</record>

		<record id="cron_monitor_station_health" model="ir.cron">
			<field name="name">Моніторинг стану станцій SmartLogger</field>
			<field name="model_id" ref="model_smartlogger_station"/>
			<field name="state">code</field>
			<field name="code">model._monitor_station_health()</field>
			<field name="interval_number">1</field>
			<field name="interval_type">hours</field>
			<field name="numbercall">-1</field>
			<field name="doall">False</field>
			<field name="active">True</field>
		</record>
	</data>
</odoo>